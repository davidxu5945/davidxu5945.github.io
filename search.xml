<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>good-visual-tool-grafana</title>
    <url>/2020/02/17/good-visual-tool-grafana/</url>
    <content><![CDATA[<p>公司里用到一个工具Grafana，可以连接很多数据源进行绘图。<br>感觉很方便，自己也搞一个玩下。</p>
<p>为了部署方便，放在NAS的docker上运行。<a href="https://www.jianshu.com/p/fc6a85d830ab" target="_blank" rel="noopener">参考资料</a></p>
<a id="more"></a>

]]></content>
      <categories>
        <category>技术</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>图表</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>python数组拆分</title>
    <url>/2020/02/07/python-list-split/</url>
    <content><![CDATA[<p>批量处理数据时，经常需要切分数组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split_list</span><span class="params">(x,n,newList=[])</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(x) &lt;= n:</span><br><span class="line">        newList.append(x)</span><br><span class="line">        <span class="keyword">return</span> newList</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        newList.append(x[:n])</span><br><span class="line">        <span class="keyword">return</span> split_list(x[n:],n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># printMonth(2020, 1)</span></span><br><span class="line">    ids = [<span class="number">6253102</span>,<span class="number">6253125</span>,<span class="number">6253144</span>……]</span><br><span class="line">    print(len(ids))</span><br><span class="line">    splitedList = split_list(ids,<span class="number">64</span>)</span><br><span class="line">    <span class="comment"># print(splitedList)</span></span><br><span class="line">    print(len(splitedList))</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> splitedList:</span><br><span class="line">        i = i+ <span class="number">1</span></span><br><span class="line">        print(i,li)</span><br><span class="line">    print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>备忘</tag>
        <tag>工具方法</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL写法备忘</title>
    <url>/2020/02/07/sql-writing-memo/</url>
    <content><![CDATA[<p>在工作中经常会遇到，写SQL的场景。<br>记录一下，供后续查询</p>
<h2 id="mysql中将多行数据合并成一行数据"><a href="#mysql中将多行数据合并成一行数据" class="headerlink" title="mysql中将多行数据合并成一行数据"></a>mysql中将多行数据合并成一行数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">GROUP_CONCAT</span>(<span class="keyword">id</span> SEPARATOR <span class="string">','</span>) c <span class="keyword">FROM</span> tableName</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="比较两个时间的差值"><a href="#比较两个时间的差值" class="headerlink" title="比较两个时间的差值"></a>比较两个时间的差值</h2><p>TIMESTAMPDIFF([HOUR/SECONDS], [time1],[time2])</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> o.site_from,o.billno,o.add_time,e.order_expire_time,e.payment_expire_time,<span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">HOUR</span>, o.add_time,e.order_expire_time) dif,p.payment_method <span class="keyword">from</span> ots_order o </span><br><span class="line">      <span class="keyword">inner</span> <span class="keyword">join</span> ots_order_extend e <span class="keyword">on</span> o.billno=e.billno</span><br><span class="line">      <span class="keyword">inner</span> <span class="keyword">join</span> ots_order_payment p <span class="keyword">on</span> p.billno=e.billno</span><br><span class="line">      <span class="keyword">where</span> p.payment_method=<span class="string">'ebanx-oxxo'</span> </span><br><span class="line">      <span class="keyword">and</span> o.status!=<span class="number">16</span></span><br><span class="line">      <span class="keyword">and</span> o.site_from <span class="keyword">in</span>(<span class="string">'andshmx'</span>,<span class="string">'iosshmx'</span>,<span class="string">'pwmx'</span>,<span class="string">'mx'</span>)</span><br><span class="line">      <span class="keyword">and</span> <span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">HOUR</span>, o.add_time,e.order_expire_time)=<span class="number">112</span></span><br><span class="line">      <span class="keyword">and</span> o.add_time&gt;<span class="string">'2020-02-13 15:00:00'</span></span><br></pre></td></tr></table></figure>

<h2 id="计算一个时间之后的某个时间"><a href="#计算一个时间之后的某个时间" class="headerlink" title="计算一个时间之后的某个时间"></a>计算一个时间之后的某个时间</h2><p>date_add(now(), interval [num] [hour/month])</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> o.billno,o.last_update_time <span class="keyword">from</span> ots_order o <span class="keyword">inner</span> <span class="keyword">join</span> ots_order_payment p <span class="keyword">on</span> o.billno = p.billno</span><br><span class="line">      <span class="keyword">inner</span> <span class="keyword">join</span> ots_order_extend e <span class="keyword">on</span> o.billno=e.billno</span><br><span class="line">      <span class="keyword">left</span> <span class="keyword">join</span> ots_order_cancel c <span class="keyword">on</span> o.billno =c.billno</span><br><span class="line">      <span class="keyword">where</span> o.status=<span class="number">16</span> <span class="keyword">and</span> p.payment_method=<span class="string">'ebanx-oxxo'</span></span><br><span class="line">      <span class="keyword">and</span> o.is_test=<span class="number">0</span></span><br><span class="line">      <span class="keyword">and</span> <span class="keyword">date_add</span>(o.add_time, <span class="built_in">interval</span> <span class="number">24</span> <span class="keyword">hour</span>) = e.order_expire_time</span><br></pre></td></tr></table></figure>

<h2 id="case-when"><a href="#case-when" class="headerlink" title="case when"></a>case when</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CASE a.shipping_country_id </span><br><span class="line">WHEN 17 THEN '973' <span class="comment">-- 巴林</span></span><br><span class="line">WHEN 113 THEN '965' <span class="comment">-- 科威特</span></span><br><span class="line">WHEN 162 THEN '968' <span class="comment">-- 阿曼</span></span><br><span class="line">WHEN 175 THEN '974' <span class="comment">-- 卡塔尔</span></span><br><span class="line">WHEN 186 THEN '966' <span class="comment">-- 沙特阿拉伯</span></span><br><span class="line">WHEN 224 THEN '971' <span class="comment">-- 阿联酋</span></span><br><span class="line">WHEN 209 THEN '886' <span class="comment">-- 台湾</span></span><br><span class="line">WHEN 233 THEN '84' <span class="comment">-- 越南</span></span><br><span class="line">WHEN 100 THEN '91' <span class="comment">-- 印度</span></span><br><span class="line">ELSE a.shipping_telephone_area_code  <span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>sql</category>
      </categories>
      <tags>
        <tag>备忘</tag>
      </tags>
  </entry>
  <entry>
    <title>Java日期格式化那些事</title>
    <url>/2020/01/23/java-date-format/</url>
    <content><![CDATA[<h2 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h2><p>今天做一个需求，需要将日期作为如下格式展示。</p>
<blockquote>
<p>日（数字）/月（数字）/年（数字）<br>eg: 18/11/2019<br>日（数字） 月（截取英文前三个字母） 年（数字）<br>eg: 18 Nov 2019</p>
</blockquote>
<a id="more"></a>
<h3 id="数字格式"><a href="#数字格式" class="headerlink" title="数字格式"></a>数字格式</h3><p>第一个格式很好解决，就是需求写的不是很明确，如果是一位数字，是否要补全0。<br>不补全：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将日期格式日期转换为字符串格式 自定义格式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dateformat</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dateToString</span><span class="params">(Date date, String dateformat)</span> </span>&#123;</span><br><span class="line">    SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(dateformat,Locale.US);</span><br><span class="line">    <span class="keyword">return</span> df.format(date);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将字符串日期转换为日期格式</span></span><br><span class="line"><span class="comment"> * 自定義格式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dateStr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">stringToDate</span><span class="params">(String dateStr, String dateFormat)</span> </span>&#123;</span><br><span class="line">    Date date;</span><br><span class="line">    SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(dateFormat);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        date = df.parse(dateStr);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">        date = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">  Date t = stringToDate(<span class="string">"2020-01-01"</span>,<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">  System.out.println(dateToString(t, <span class="string">"d/M/y"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>补全0：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">// y 与 yyyy 是一样的效果</span></span><br><span class="line">  System.out.println(dateToString(t, <span class="string">"dd/MM/y"</span>));</span><br><span class="line">  System.out.println(dateToString(t, <span class="string">"dd/MM/yyyy"</span>));</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="月份英文"><a href="#月份英文" class="headerlink" title="月份英文"></a>月份英文</h3><p>上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">// y 与 yyyy 是一样的效果</span></span><br><span class="line">  System.out.println(dateToString(t, <span class="string">"d MMM y"</span>));</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这里需要确认是指定输出语言，偷个懒，没暴露入参，指定为英文<code>Locale.US</code>。<br>还有一些国家也是英文，也可直接指定英文<code>Locale.ENGLISH</code>。<br>否则会取默认值。（具体默认值是啥，我也不知道😭，<del>跟服务器设置有关？</del>）</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>在搜索资料过程中，发现一个梗，19到20年的时间格式化，2019-12-29 被格式化为 2020-12-29。<br>原因是，字符串<code>y</code>被写成了<code>Y</code><br>y 是 Year、Y 是 Week Year。<br>按周计年的第一周是指：以星期一为周始，以星期日为周末，第一个包含该年度四天以上的周。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=1000 height=800 src="https://www.jdoodle.com/embed/v0/1OOP"></iframe>
]]></content>
      <categories>
        <category>技术</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>开发有感</tag>
      </tags>
  </entry>
  <entry>
    <title>docker入门</title>
    <url>/2020/01/21/docker-introduction/</url>
    <content><![CDATA[<p>记录mac上安装docker的过程</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">brew cask install docker</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看版本</span></span><br><span class="line">docker --version</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看配置信息</span></span><br><span class="line">docker info</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>注册账号<br>Registry Mirrors:<br> <a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a></p>
<h2 id="制作-运行镜像"><a href="#制作-运行镜像" class="headerlink" title="制作/运行镜像"></a>制作/运行镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/docker/doodle.git</span><br><span class="line">cd doodle/cheers2019 &amp;&amp; docker build -t davidxu5945/cheers2019 .</span><br><span class="line">docker run -it --rm davidxu5945/cheers2019</span><br></pre></td></tr></table></figure>

<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>发布springboot项目到docker</p>
<p>build.gradle</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apply plugin: &#39;com.palantir.docker&#39;</span><br><span class="line"></span><br><span class="line">docker&#123;</span><br><span class="line">    buildArgs([&#39;JAR_FILE&#39;: &quot;$&#123;jar.archiveName&#125;&quot;])</span><br><span class="line">&#125;</span><br><span class="line">task buildDocker(type: Docker, dependsOn: build, group: &quot;docker&quot;) &#123;</span><br><span class="line">    dockerfile &#x3D; file(&#39;src&#x2F;main&#x2F;docker&#x2F;Dockerfile&#39;)</span><br><span class="line">    doFirst &#123;</span><br><span class="line">        copy &#123;</span><br><span class="line">            from jar</span><br><span class="line">            into stageDir</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>dockerfile</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># From java image, version : 8</span><br><span class="line"># 指定镜像，这里用网易云仓库的java8镜像</span><br><span class="line">FROM hub.c.163.com&#x2F;library&#x2F;java:8-jre</span><br><span class="line">#FROM java:openjdk-8-alpine</span><br><span class="line"></span><br><span class="line"># 挂载test-docker目录,创建&#x2F;tmp目录并持久化到Docker数据文件夹，</span><br><span class="line"># 因为Spring Boot使用的内嵌Tomcat容器默认使用&#x2F;tmp作为工作目录。</span><br><span class="line">VOLUME &#x2F;tmp</span><br><span class="line"></span><br><span class="line"># COPY or ADD to image</span><br><span class="line"># 将编译目标jar包复制到&#x2F;app.jar</span><br><span class="line">ADD $&#123;JAR_FILE&#125; app.jar</span><br><span class="line"></span><br><span class="line">RUN bash -c &quot;touch &#x2F;app.jar&quot;</span><br><span class="line"></span><br><span class="line"># 默认8080端口</span><br><span class="line"># 指定项目暴露的端口号，与项目配置一样,即容器配置的暴露端口</span><br><span class="line">EXPOSE 8080</span><br><span class="line">#ENTRYPOINT 执行项目 app.jar。为了缩短 Tomcat 启动时间，添加一个系统属性指向 &quot;&#x2F;dev&#x2F;urandom&quot; 作为 Entropy Source</span><br><span class="line">#ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;app.jar&quot;]</span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom&quot;,&quot;-jar&quot;,&quot;&#x2F;app.jar&quot;]</span><br><span class="line">#ENTRYPOINT &quot;ls -l&quot;</span><br><span class="line">#ENTRYPOINT &quot;ls -l&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>学习新技术</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Node环境</title>
    <url>/2020/01/20/install-nodejs/</url>
    <content><![CDATA[<p>安装了很多次环境，每次都要到网上去找资料，还是自己记录一下比较好。</p>
<h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><p>本地开发经常会有使用不同版本开发的需求。<br>Mac上可以安装nvm进行版本管理。</p>
<a id="more"></a>
<h2 id="配置npm"><a href="#配置npm" class="headerlink" title="配置npm"></a>配置npm</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看配置</span><br><span class="line">npm config list</span><br><span class="line"># 添加缓存位置</span><br><span class="line">npm config set prefix &quot;~&#x2F;nodejs&#x2F;npm_global&quot;</span><br><span class="line">npm config set cache &quot;~&#x2F;nodejs&#x2F;npm_cache&quot;</span><br><span class="line"># 添加镜像</span><br><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>工作流-发布通知系统</title>
    <url>/2020/01/17/work-flow-publish-notice/</url>
    <content><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>存在多个测试环境</p>
<p>需求上测试环境，需要让测试发布，发布后，经常需要人工问下，是否发布完成。</p>
<a id="more"></a>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>通过统一的系统发布通知，减少低效的人工沟通</p>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>建立一个通知系统，可作为中间调度， 微信、钉钉机器人</p>
<ol>
<li>将机器人ID 注册到该系统中</li>
<li>每当有某个系统（SYS_CODE)在某个环境(ENV_NUM)发布时，直接调用改系统，传入系统编码 和 环境</li>
<li>查找到订阅发布事件的机器人，推送消息即可。</li>
<li>推送消息，应可以根据系统，自定义模板。</li>
</ol>
<p>画个流程图</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>灵感</tag>
      </tags>
  </entry>
  <entry>
    <title> Java 流式对比写法</title>
    <url>/2020/01/17/java-stream-sort/</url>
    <content><![CDATA[<h1 id="Java-流式对比写法"><a href="#Java-流式对比写法" class="headerlink" title="Java 流式对比写法"></a>Java 流式对比写法</h1><h2 id="场景定义"><a href="#场景定义" class="headerlink" title="场景定义"></a>场景定义</h2><ol>
<li>多个对比条件</li>
<li>条件之间有优先级<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 三种条件，权重逐个降低</span></span><br><span class="line"><span class="comment">// 第一个条件，无法判断先后顺序的，由后一个条件继续比较</span></span><br><span class="line">Comparator&lt;OrderGoods&gt; notCouponCmp = (o1, o2) -&gt; o1.getId().equals(notCouponGoodsId) ? <span class="number">1</span> : o2.getId().equals(notCouponGoodsId) ? -<span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">Comparator&lt;OrderGoods&gt; couponCmp = (o1, o2) -&gt; o1.getId().equals(couponGoodsId) ? <span class="number">1</span> : o2.getId().equals(couponGoodsId) ? -<span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">Comparator&lt;OrderGoods&gt; taxCmp = (o1, o2) -&gt; &#123;</span><br><span class="line">    <span class="keyword">boolean</span> o1In = taxGoodsId.contains(o1.getId());</span><br><span class="line">    <span class="keyword">boolean</span> o2In = taxGoodsId.contains(o2.getId());</span><br><span class="line">    <span class="keyword">if</span> (o1In &amp;&amp; !o2In) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!o1In &amp;&amp; o2In) &#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o1.getId().compareTo(o2.getId());</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> orderGoodsList.stream()</span><br><span class="line">        .sorted(Comparator.nullsLast(notCouponCmp).thenComparing(couponCmp).thenComparing(taxCmp))</span><br><span class="line">        .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="引申问题：sorted方法调用发生了什么？"><a href="#引申问题：sorted方法调用发生了什么？" class="headerlink" title="引申问题：sorted方法调用发生了什么？"></a>引申问题：sorted方法调用发生了什么？</h2><p>用了什么排序算法？</p>
<p>参考：<a href="https://blog.csdn.net/TimHeath/article/details/68930482" target="_blank" rel="noopener">https://blog.csdn.net/TimHeath/article/details/68930482</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>开发有感</tag>
      </tags>
  </entry>
  <entry>
    <title>文件断点上传</title>
    <url>/2020/01/13/file-breakpoint-upload/</url>
    <content><![CDATA[<h1 id="文件断点上传"><a href="#文件断点上传" class="headerlink" title="文件断点上传"></a>文件断点上传</h1><p>参考 收藏在印象笔记的文章，写个Demo</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>读后实践</tag>
      </tags>
  </entry>
  <entry>
    <title>读书笔记-写给忙碌的人的心脏病课</title>
    <url>/2019/09/07/cardiology-class-for-busy-people/</url>
    <content><![CDATA[<p>最近老爸生病了，从一篇公众号文章——<a href="https://mp.weixin.qq.com/s/lbV3sgMc9ao76Yghe3wUSw" target="_blank" rel="noopener">学个教程把自己学进医院了</a>里看到这本书。看着感觉自己也快生病了，主要最近休息的不是很好，晚上睡眠时间有时都达不到6小时。<br>我用marginnote做了笔记，并在onedrive备份了源文件。</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=1000 height=800 src="https://www.processon.com/view/5d7358d6e4b03461a39feb4d#map"></iframe>


<p>我看完之后，感觉自己的运动意愿有所加强，趁机开始运动吧💪 </p>
<p>我需要改进的有： </p>
<ul>
<li><p>运动习惯，每周三次，每次30分钟；现在每周一次，或者零次 </p>
</li>
<li><p>充足的睡眠，晚上要休息好，加班就住宿舍，不要回家了 </p>
</li>
<li><p>午睡不要超过30分钟！！！ </p>
</li>
<li><p>控制体重，BMI控制在到25以下</p>
</li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>健康</tag>
      </tags>
  </entry>
</search>
